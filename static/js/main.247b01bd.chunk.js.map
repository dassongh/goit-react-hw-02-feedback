{"version":3,"sources":["statistics/Statistics.jsx","feedbackOptions/FeedbackOptions.jsx","section/Section.jsx","notification/Notification.jsx","App.jsx","index.js"],"names":["Statistics","good","neutral","bad","totalFeedbacks","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","btn","type","onClick","Section","title","children","Notification","App","state","btnHandler","e","setState","prevState","target","innerText","countTotalFeedbacks","Object","values","reduce","acc","feedback","countPositiveFeedbackPercentage","total","toFixed","btns","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAGe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,eACAC,EACC,EADDA,mBAEA,OACE,gCACE,4CACA,+BACE,yCAAYJ,KACZ,4CAAeC,KACf,wCAAWC,KACX,0CAAaC,KACb,sDACuBC,EAAqB,EAAIA,EAAqB,EADrE,a,MCEOC,MAjBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAG,OACd,wBAAQC,KAAK,SAAmBC,QAASJ,EAAzC,SACGE,GADwBA,S,MCJpB,SAASG,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,KCLQ,SAASC,EAAT,GAAkC,IAAVF,EAAS,EAATA,MACrC,OACE,8BACE,6BAAKA,M,ICCLG,E,4MACJC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPgB,WAAa,SAAAC,GACX,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAEG,OAAOC,UAAYF,EAAUF,EAAEG,OAAOC,WAAa,O,EAI1DC,oBAAsB,WAEpB,OADeC,OAAOC,OAAO,EAAKT,OACpBU,QAAO,SAACC,EAAKC,GAAN,OAAmBD,EAAMC,IAAU,I,EAG1DC,gCAAkC,SAAAC,GAChC,OAAS,EAAKd,MAAMjB,KAAO+B,EAAS,KAAKC,W,4CAG3C,WACE,IAAMC,EAAOR,OAAOS,KAAKC,KAAKlB,OAC9B,EAA+BkB,KAAKlB,MAA5BjB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEjBC,EAAiBgC,KAAKX,sBACtBpB,EACJ+B,KAAKL,gCAAgC3B,GAEvC,OACE,eAACS,EAAD,CAASC,MAAM,6BAAf,UACE,cAAC,EAAD,CAAiBP,QAAS2B,EAAM1B,gBAAiB4B,KAAKjB,aAErDf,EACC,cAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,eAAgBA,EAChBC,mBAAoBA,IAGtB,cAACW,EAAD,CAAcF,MAAM,gC,GA3CZuB,aAkDHpB,ICnDfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.247b01bd.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  totalFeedbacks,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div>\r\n      <h2>Statistics</h2>\r\n      <ul>\r\n        <li>Good : {good}</li>\r\n        <li>Neutral : {neutral}</li>\r\n        <li>Bad : {bad}</li>\r\n        <li>Total : {totalFeedbacks}</li>\r\n        <li>\r\n          Positive feedback : {positivePercentage > 0 ? positivePercentage : 0}%\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  bad: PropTypes.number,\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  positivePercentage: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  totalFeedbacks: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {options.map(btn => (\r\n        <button type=\"button\" key={btn} onClick={onLeaveFeedback}>\r\n          {btn}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func,\r\n  options: PropTypes.array,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Notification({ title }) {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React, { Component } from 'react';\r\nimport Statistics from './statistics/Statistics';\r\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions';\r\nimport Section from './section/Section';\r\nimport Notification from './notification/Notification';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  btnHandler = e => {\r\n    this.setState(prevState => ({\r\n      [e.target.innerText]: prevState[e.target.innerText] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedbacks = () => {\r\n    const values = Object.values(this.state);\r\n    return values.reduce((acc, feedback) => acc + feedback, 0);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = total => {\r\n    return ((this.state.good / total) * 100).toFixed();\r\n  };\r\n\r\n  render() {\r\n    const btns = Object.keys(this.state);\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    const totalFeedbacks = this.countTotalFeedbacks();\r\n    const positivePercentage =\r\n      this.countPositiveFeedbackPercentage(totalFeedbacks);\r\n\r\n    return (\r\n      <Section title=\"Please leave your feedback\">\r\n        <FeedbackOptions options={btns} onLeaveFeedback={this.btnHandler} />\r\n\r\n        {totalFeedbacks ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            totalFeedbacks={totalFeedbacks}\r\n            positivePercentage={positivePercentage}\r\n          />\r\n        ) : (\r\n          <Notification title=\"There is no feedback\" />\r\n        )}\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}